* Tests Shell
** Terminal
   - TERM= ./42sh
   - TERM=merde ./42sh
   - TERM=dumb ./42sh
   - Lancer le shell comme shell par défaut d'un terminal, ne pas passer par un shell intermédiaire
   - Changer le caractere d'INTR du terminal, avec =stty=, et voir si le changement est pris en compte
*** Ulimit
#+BEGIN_SRC
$> ulimit -n 10
$> ./42sh
42sh> env | (cat -e | cat -e); echo abc
#+END_SRC
   
** Input
  - =./42sh < file.cmd=
  - Fermeture de fd au lancement =./42sh >&- 2>&-=

** UI
   - Checker les chars =C-u=, =DEL=, =C-w= dans l'UI

** Lexer/Parser
   - =cmd 'abc\<RET>def'
   - EOF sur le heredoc
   - INTR sur le heredoc
   
** Execution
   - Vérifier les fds laissé ouvert par le shell. Faire un =lseek= de plusieurs Go sur le fd laissé ouvert
   - =/a | cat /dev/random | base64 > /dev/null=
*** restauration de fd clos via builtin
#+BEGIN_SRC
./42sh >&-
42sh> echo abc >&2
abc
42sh> echo def
#+END_SRC
*** file descriptors
    - Un fd peut être clos, via <&- >&-
    - Un fd peut pointer vers /dev/null
    - Un fd peut pointer vers un fichier
    - Un fd peut pointer vers un tty
*** fd clos au lancement avec des pipes en commandes
    Ne pas oublier d'augmenter la limite soft des fds open
    =./42sh -c 'env | cat -e | wc | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e' <&- >&-=


** Heredoc
   - Creer un heredoc avec une erreur de parsing apres le ~heredoc~. Est-ce que le heredoc s'affiche ?
   - Créer un heredoc, remonter l'historique, est-ce que le heredoc multi-ligne est présent ? Si oui, s'exécute t'il sans réafficher le prompt du heredoc ?e

** Signal
   - Envoyer un SIGHUP au 42sh. Est-ce que les enfants sont kill aussi ?
   - =python -c 'print "ls | " * 100000 + "ls"' | ./42sh=
